<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpcuser.proto

namespace Grpc\User\Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 用户登陆信息
 *
 * Generated from protobuf message <code>Grpc.User.Request.UserLogin</code>
 */
class UserLogin extends \Google\Protobuf\Internal\Message
{
    /**
     * 用户登陆信息
     *
     * Generated from protobuf field <code>string username = 1;</code>
     */
    protected $username = '';
    /**
     *  密码登陆
     *
     * Generated from protobuf field <code>string password = 2;</code>
     */
    protected $password = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $username
     *           用户登陆信息
     *     @type string $password
     *            密码登陆
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Grpcuser::initOnce();
        parent::__construct($data);
    }

    /**
     * 用户登陆信息
     *
     * Generated from protobuf field <code>string username = 1;</code>
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * 用户登陆信息
     *
     * Generated from protobuf field <code>string username = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUsername($var)
    {
        GPBUtil::checkString($var, True);
        $this->username = $var;

        return $this;
    }

    /**
     *  密码登陆
     *
     * Generated from protobuf field <code>string password = 2;</code>
     * @return string
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     *  密码登陆
     *
     * Generated from protobuf field <code>string password = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPassword($var)
    {
        GPBUtil::checkString($var, True);
        $this->password = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(UserLogin::class, \Grpc\User\Request_UserLogin::class);

